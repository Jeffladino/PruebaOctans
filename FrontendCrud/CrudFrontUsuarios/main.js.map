{"version":3,"sources":["./src/app/model/usuario.ts","./src/environments/environment.ts","./src/app/usuario/lista-usuario.component.ts","./src/app/usuario/lista-usuario.component.html","./src/app/usuario/nuevo-usuario.component.ts","./src/app/usuario/nuevo-usuario.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/usuario/detalle-usuario.component.ts","./src/app/usuario/detalle-usuario.component.html","./src/app/usuario/editar-usuario.component.ts","./src/app/usuario/editar-usuario.component.html","./src/app/services/usuario.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["\n//Objeto de la entidad usuario de la BD\nexport class Usuario {\n\n    idUsuario?:number; //este dato lo genera el motor de la BD por esta razón no es un dato obligatorio\n    nombre:String;\n    activo:String;\n    rol:{};\n\n    constructor(nombre: String, activo: String, rol){\n        this.nombre = nombre;\n        this.activo = activo;\n        this.rol = rol;\n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { Usuario } from '../model/usuario';\nimport { UsuarioService } from '../services/usuario.service';\n\n@Component({\n  selector: 'app-lista-usuario',\n  templateUrl: './lista-usuario.component.html',\n  styleUrls: ['./lista-usuario.component.css']\n})\nexport class ListaUsuarioComponent implements OnInit {\n\n    //instanciando el objeto\n    usuarios: Usuario[] = [];\n    nombre:\"\";\n    msj =\"\";\n\n  constructor(private usuarioService: UsuarioService) { }\n\n  ngOnInit(): void {\n    //listar los usuarios si el objeto esta vacio\n    if(this.usuarios.length == 0)\n      this.listarUsuarios();\n  }\n\n  //Listar usuarios\n  listarUsuarios():void{\n    this.usuarioService.lista().subscribe(\n      data => {\n        this.usuarios = data;\n      },\n      err => {\n        console.log(err);\n      }\n    )\n  }\n\n  //Función para borrar por id \n  borrar(id: number){\n    this.usuarioService.eliminar(id).subscribe(\n      data => {\n        alert(\"Usuario Eliminado\");\n        this.listarUsuarios();\n      },\n      err =>{\n        \n        alert(err.error.mensaje );\n      }\n    );\n  }\n\n//Metodo el cual valida que el nombre sea diferente de indefinido\n//para listar por nombres \n  onSearch():void{\n   \n    if(this.nombre != undefined )\n      this.usuarioService.listaNombres(this.nombre).subscribe(\n        data => {\n          this.usuarios = data;\n         \n        },\n          \n        err => {\n          this.msj = err.error.mensaje\n          this.usuarios = [];\n          alert(this.msj);\n          //this.router.navigate(['/']);\n        }\n      );\n    else{\n      alert(\"diligencia un usuario\")\n      this.usuarios = [];\n    }\n\n  \n  }\n\n  //Limpiar el campo de busqueda. \n\n  limpiar():void{\n    this.nombre =\"\";\n    this.listarUsuarios();\n  }\n\n}\n","\n  <!--Lista usuario y viata principal-->\n  \n  <div class=\"container\">\n    <div class=\"row-mt-5\">\n        <div class=\"col-md-4 mx-auto\">\n            <form (ngSubmit)=\"onSearch()\"> \n                <div class=\"form-group\">\n                    <label for=\"nombre\">Nombre usuario</label>\n                    <input type=\"text\" class=\"form-control\" id=\"nombre\" name=\"nombre\" \n                    [(ngModel)]=\"nombre\" required/>\n                </div>\n                \n                <button class=\"btn btn-outline-success btn-block\" >Buscar Usuario</button>\n                \n            </form>\n            <br>\n            <button  class=\"btn btn-outline-danger\" (click)=\"limpiar()\">Borra campo</button>\n\n        </div>\n    </div>\n</div>\n\n<div class=\"container\"  *ngIf=\"usuarios.length==0\">\n      <a class=\"btn btn-outline-success\" routerLink=\"/guardar\">Nuevo usuario</a>\n</div>\n\n\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th scope=\"col\">IdUsuarios</th>\n      <th scope=\"col\">Nombre</th>\n      <th scope=\"col\">Activo</th>\n      <th scope=\"col\">Rol</th>\n      <th scope=\"col\">Ver Usuario</th>\n      <th scope=\"col\">Editar</th>\n      <th scope=\"col\">Eliminar</th>\n    </tr>\n  </thead>\n  <tbody>\n   \n    <tr *ngFor=\"let usuario2 of usuarios\">\n      \n      <td>{{usuario2.idUsuario}}</td>\n      <td>{{usuario2.nombre}}</td>\n      <td *ngIf=\"usuario2.activo == 'I'\"><b> </b>Inactivo</td>\n      <td *ngIf=\"usuario2.activo == 'A'\"><b> </b>Activo</td>\n      <td>{{usuario2.rol.nombre}}</td>\n      <td><button class=\"btn btn-outline-primary\" routerLink=\"/detalle/{{usuario2.idUsuario}}\">Ver Usuario</button></td>\n      <td><button class=\"btn btn-outline-warning\" routerLink=\"/editar/{{usuario2.idUsuario}}\">Editar</button></td>\n      <td><button  class=\"btn btn-outline-danger\" (click)=\"borrar(usuario2.idUsuario)\">Eliminar</button></td>\n    </tr>\n   \n  </tbody>\n</table>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Rol } from '../model/rol';\nimport { Usuario } from '../model/usuario';\nimport { UsuarioService } from '../services/usuario.service';\nimport { FormBuilder, Validators } from \"@angular/forms\";\n\n\n@Component({\n  selector: 'app-nuevo-usuario',\n  templateUrl: './nuevo-usuario.component.html',\n  styleUrls: ['./nuevo-usuario.component.css']\n})\nexport class NuevoUsuarioComponent implements OnInit {\n\n  nombre=\"\";\n  activo=\"A\";\n  rol: Rol[]=[];\n  msj=\"\";\n\n  //instanciando el objeto Rol\n  roles: Rol[]=[];\n  \n  constructor(\n    private usuarioService: UsuarioService,\n    private router:Router,\n    public fb: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    //Listar los roles\n    this.listarRoless();\n   \n  }\n\n  \n//Metodo para listar los roles de la BD\n  listarRoless():void{\n    this.usuarioService.listaRoles().subscribe(\n      data => {\n        this.roles = data;\n      },\n      err => {\n        console.log(err);\n      }\n    )\n  }\n\n  //Metodo guardar un objeto de usuario en la BD\n  onCreate():void{\n    \n    const usuario = new Usuario(this.nombre, this.activo, this.rol);\n    this.usuarioService.guardar(usuario).subscribe(\n      data => {\n        alert(this.msj = \"usuario Creado \");\n        this.router.navigate(['/']);\n      },\n        \n      err => {\n        alert(this.msj = \"usuario no creado \" + err.error.mensaje);\n        //this.router.navigate(['/']);\n      }\n    );\n  }\n\n\n}\n","<!--Vista crear usuario-->\n<div class=\"container\">\n    <div class=\"row-mt-5\">\n        <div class=\"col-md-4 mx-auto\">\n            <form (ngSubmit)=\"onCreate()\"> \n                <div class=\"form-group\">\n                    <label for=\"nombre\">Nombre usuario</label>\n                    <input type=\"text\" class=\"form-control\" id=\"nombre\" name=\"nombre\" \n                    [(ngModel)]=\"nombre\" required/>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"precio\">Rol</label>\n                    <input type=\"radio\" value=\"A\" name=\"activo\" [(ngModel)]=\"activo\" required > Activo\n                     <input type=\"radio\" value=\"I\" name=\"activo\" [(ngModel)]=\"activo\" required > Inactivo\n                </div>\n                <div>\n                    <select class=\"custom-select\" name=\"miselect\"   [(ngModel)]=\"rol\">\n                        <option value=\"\" disabled>escoger el rol</option>\n                        <option [ngValue]=\"rolf\" *ngFor=\"let rolf of roles\"  >{{rolf.nombre}}</option>\n                     </select>\n                </div>\n                <button class=\"btn btn-outline-success btn-block\">Guardar Usuario</button>\n            </form>\n           \n\n        </div>\n    </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'CrudFrontUsuarios';\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <div class=\"container-fluid\">\n    <a class=\"navbar-brand\" href=\"#\">Gestion de usuarios</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n      <ul class=\"navbar-nav ms-auto\">\n        <li class=\"nav-item\">\n          <!--routerLink para no recargar la pagina-->\n          <a class=\"nav-link\" routerLink=\"/\" Features>Lista</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/guardar\">Nuevo usuario</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n\n\n\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ListaUsuarioComponent } from './usuario/lista-usuario.component';\nimport { DetalleUsuarioComponent } from './usuario/detalle-usuario.component';\nimport { EditarUsuarioComponent } from './usuario/editar-usuario.component';\nimport { NuevoUsuarioComponent } from './usuario/nuevo-usuario.component';\n\n\n//Cliente http y formulario\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { from } from 'rxjs';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListaUsuarioComponent,\n    DetalleUsuarioComponent,\n    EditarUsuarioComponent,\n    NuevoUsuarioComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Usuario } from '../model/usuario';\nimport { UsuarioService } from '../services/usuario.service';\n\n@Component({\n  selector: 'app-detalle-usuario',\n  templateUrl: './detalle-usuario.component.html',\n  styleUrls: ['./detalle-usuario.component.css']\n})\nexport class DetalleUsuarioComponent implements OnInit {\n\n  //Instanciando el objeto usuario\n  usuario: Usuario = null;\n  rol: any ;\n  msj = \"\";\n\n  constructor(\n    private usuarioService: UsuarioService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    //Obteniendo el parametro id por medio de la ruta\n    const id = this.activatedRoute.snapshot.params.id;\n    //Consumiendo el API Rest\n    this.usuarioService.detalle(id).subscribe(\n      data =>{\n        this.usuario = data;\n        this.rol = this.usuario.rol;\n      },\n      err =>{\n        alert(this.msj = \"Usuario no encontrado \" + err.error.mensaje);\n      }\n    )\n  }\n\n  //Metodo para regresar a la ruta principal.\n\n  volver():void{\n    this.router.navigate(['/']);\n  }\n\n\n}\n","<!--Vista detalle del usuario-->\n\n<div class=\"container\">\n    <div class=\"row\" *ngIf=\"usuario\">\n        <div class=\"col-md-4 mx-5\">\n            \n                <div class=\"card-mt-5\" style=\"width: 18rem;\">\n                    <div class=\"card-header\">\n                      Usuario\n                    </div>\n                    <ul class=\"list-group list-group-flush\">\n                      <li class=\"list-group-item\"><b>Id: </b>{{usuario.idUsuario}}</li>\n                      <li class=\"list-group-item\"><b>Nombre: </b>{{usuario.nombre}}</li>\n                      <li class=\"list-group-item\" *ngIf=\"usuario.activo == 'I'\"><b>Estado: </b>Inactivo</li>\n                      <li class=\"list-group-item\" *ngIf=\"usuario.activo == 'A'\"><b>Estado: </b>Activo</li>\n                      <li class=\"list-group-item\"><b>rol: </b>{{rol.nombre}}</li>\n                    </ul>\n                    <div class=\"card-footer\">\n                        <button class=\"btn btn-outline-primary btn-block\" (click)=\"volver()\">Regresar</button>\n                    </div>\n                  </div>\n    \n        </div>\n    </div>\n    \n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Rol } from '../model/rol';\nimport { Usuario } from '../model/usuario';\nimport { UsuarioService } from '../services/usuario.service';\n\n@Component({\n  selector: 'app-editar-usuario',\n  templateUrl: './editar-usuario.component.html',\n  styleUrls: ['./editar-usuario.component.css']\n})\nexport class EditarUsuarioComponent implements OnInit {\n\n  msj = \"\";\n   //instanciando el objeto Rol\n   roles: Rol[]=[];\n   \n  usuario: Usuario = null;\n  constructor(\n    private usuarioService: UsuarioService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    //Lista Roles para los selects de la vista\n    this.listarRoless();\n    //Se obtiene le parametro de la url\n    const id = this.activatedRoute.snapshot.params.id;\n    //Se envía el id para obtener la data del usuario\n    this.usuarioService.detalle(id).subscribe(\n      data =>{\n        this.usuario = data;\n      \n      },\n      err => {\n        alert(err.error.mensaje)\n        this.router.navigate(['/']);\n      }\n    )\n    \n  }\n\n\n  //Función que permite actualizar el usuario \n  onUpdate(): void{\n    const id = this.activatedRoute.snapshot.params.id;\n    this.usuarioService.actualizar(id, this.usuario).subscribe(\n      data => {\n        alert(this.msj = \"Usuario editado \");\n        this.router.navigate(['/']);\n      },\n        \n      err => {\n        alert(this.msj = \"Usuario no fue editado \" + err.error.mensaje);\n        //this.router.navigate(['/']);\n      }\n    );\n  }\n\n  //Función para listar roles y enviarlos a la vista.html\n  listarRoless():void{\n    this.usuarioService.listaRoles().subscribe(\n      data => {\n        this.roles = data;\n      },\n      err => {\n        console.log(err);\n      }\n    )\n  }\n\n  //Función que permtie que aparezca en la lista seleccionada el rol del usuario\n  compararNombres(rol1:Rol, rol2:Rol){\n    if (rol1==null || rol2==null) {\n      return false;\n    }\n    return rol1.nombre===rol2.nombre;\n  }\n\n}\n","<!--Vista  editar usuario-->\n\n<div class=\"container\">\n    <div class=\"row-mt-5\">\n        <div class=\"col-md-4 mx-auto\">\n            <form (ngSubmit)=\"onUpdate()\"> \n                <div class=\"form-group\">\n                    <label for=\"nombre\">Nombre usuario</label>\n                    <input type=\"text\" class=\"form-control\" id=\"nombre\" name=\"nombre\" \n                    [(ngModel)]=\"usuario.nombre\" required/>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"precio\">Rol</label>\n                    <input type=\"radio\" value=\"A\" name=\"activo\" [(ngModel)]=\"usuario.activo\" required > Activo\n                    <input type=\"radio\" value=\"I\" name=\"activo\" [(ngModel)]=\"usuario.activo\" required > Inactivo\n                </div>\n                <div>\n                    <select class=\"custom-select\" name=\"miselect\"   [(ngModel)]=\"usuario.rol\" [compareWith]=\"compararNombres\">\n                        <option value=\"\" disabled>escoger el rol</option>\n                        <option [ngValue]=\"rolf\" *ngFor=\"let rolf of roles\" >{{rolf.nombre}} </option>\n                     </select>\n                </div>\n                <button class=\"btn btn-outline-success btn-block\">Guardar Usuario</button>\n            </form>\n         \n\n        </div>\n    </div>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Rol } from '../model/rol';\nimport { Usuario } from '../model/usuario';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuarioService {\n\n    //Urls de los endpoint para consumer la api rest\n    UsuarioURL = 'http://localhost:9094/usuarios/';\n    rolURL = 'http://localhost:9094/roles/' ;\n\n\n  constructor(private httpClient: HttpClient) { }\n\n  //Servicio Listas usuarios\n  public lista(): Observable<Usuario[]>{\n    return this.httpClient.get<Usuario[]>(this.UsuarioURL + \"lista\");\n  }\n\n  //Servicio Lista por nombres de usuarios\n\n  public listaNombres(nombre:String){\n    return this.httpClient.get<Usuario[]>(this.UsuarioURL + `usuariospornombre/${nombre}`);  \n  } \n\n  //Detalle del usuario \n  public detalle(id:number): Observable<Usuario>{\n    return this.httpClient.get<Usuario>(this.UsuarioURL + `detalle/${id}`);\n  }\n\n  //Detalle del usuario por nombre\n  public detalleNombre(nombre:String): Observable<Usuario>{\n    return this.httpClient.get<Usuario>(this.UsuarioURL + `detalle/${nombre}`);\n  }\n\n  //Crear usuario \n  public guardar(usuario: Usuario ): Observable<any>{\n    //Se coloca el objeto al final porque es un requestbody si no fuera un reques se dejan {}\n    return this.httpClient.post<any>(this.UsuarioURL + \"guardar\", usuario );\n  }\n\n  //Actualizar usuario\n  public actualizar(id:number, usuario: Usuario ): Observable<any>{\n    //Se coloca el objeto al final porque es un requestbody si no fuera un reques se dejan {}\n    return this.httpClient.put<any>(this.UsuarioURL + `actualizar/${id}`, usuario );\n  }\n\n  //Eliminar  usuario\n  public eliminar(id:number): Observable<any>{\n    return this.httpClient.delete<any>(this.UsuarioURL + `eliminar/${id}`);\n  }\n  \n  //Lista Roles\n  public listaRoles(): Observable<Rol[]>{\n    return this.httpClient.get<Rol[]>(this.rolURL + \"lista\");\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DetalleUsuarioComponent } from './usuario/detalle-usuario.component';\nimport { EditarUsuarioComponent } from './usuario/editar-usuario.component';\nimport { ListaUsuarioComponent } from './usuario/lista-usuario.component';\nimport { NuevoUsuarioComponent } from './usuario/nuevo-usuario.component';\n\n//Definiendo las rutas  de los componentes\n//enviando parametros para las funciones o metodos\n\nconst routes: Routes = [\n  {path: '', component: ListaUsuarioComponent},\n  {path: 'detalle/:id', component:DetalleUsuarioComponent},\n  {path: 'guardar', component:NuevoUsuarioComponent},\n  {path: 'editar/:id', component:EditarUsuarioComponent},\n  {path: '**', redirectTo: '', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}